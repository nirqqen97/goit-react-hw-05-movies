{"version":3,"file":"static/js/854.9ff0e3d8.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BAElB,IAAMC,EAAQ,mCAAG,WAAOC,EAAKC,GAAZ,gGAEKH,EAAAA,EAAAA,IAAA,uFAA0FE,EAA1F,iBAAuGC,EAAvG,yBAFL,cAEZC,EAFY,yBAGXA,GAHW,gCAKlBC,QAAQC,MAAR,MALkB,yDAAH,wDASRC,EAAW,mCAAG,6GAEEP,EAAAA,EAAAA,IAAA,+DAFF,cAEfI,EAFe,yBAGdA,GAHc,gCAKrBC,QAAQC,MAAR,MALqB,yDAAH,qDASXE,EAAU,mCAAG,WAAMC,GAAN,gGAECT,EAAAA,EAAAA,IAAA,kBAAqBS,EAArB,6DAFD,cAEhBL,EAFgB,yBAGfA,GAHe,gCAKtBC,QAAQC,MAAR,MALsB,yDAAH,sDASVI,EAAO,mCAAG,WAAMD,GAAN,gGAEIT,EAAAA,EAAAA,IAAA,kBAAqBS,EAArB,qEAFJ,cAEbL,EAFa,yBAGZA,GAHY,gCAKnBC,QAAQC,MAAR,MALmB,yDAAH,sDASPK,EAAS,mCAAG,WAAMF,GAAN,gGAEET,EAAAA,EAAAA,IAAA,kBAAqBS,EAArB,4EAFF,cAEfL,EAFe,yBAGdA,GAHc,gCAKrBC,QAAQC,MAAR,MALqB,yDAAH,qD,4KCrCTM,EAAOC,EAAAA,EAAAA,GAAH,sBAEJC,GAAOD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,8D,SCFJG,EAAW,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,SACzB,OAAQ,SAACN,EAAD,UACPK,EAAME,KAAI,SAAAC,GACR,OAAQ,SAACN,EAAD,CAAMO,MAAO,CAACC,KAAOJ,GAAyBK,GAAE,UAAMH,EAAKX,IAA3D,SAAkEW,EAAKI,gBAAlCJ,EAAKX,GACpD,KAER,E,UCPYgB,EAAMZ,EAAAA,EAAAA,OAAH,sBAEHa,EAAQb,EAAAA,EAAAA,MAAH,sBAELc,EAAYd,EAAAA,EAAAA,IAAH,yCAGTe,EAAOf,EAAAA,EAAAA,KAAH,sB,UCgDjB,EAjDe,WAAM,IAAD,EAChB,GAA0BgB,EAAAA,EAAAA,UAAS,IAAnC,eAAOZ,EAAP,KAAca,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GACvCnB,GAAWoB,EAAAA,EAAAA,MACjB,GAA0BT,EAAAA,EAAAA,UAAS,IAAnC,eAAOU,EAAP,KAAcC,EAAd,MAMAC,EAAAA,EAAAA,YAAU,WACJL,IAGLJ,EAAU,YACV/B,EAAAA,EAAAA,IAASmC,EAAO,GAAGM,MAAK,SAAAtB,GACpBU,EAASV,EAAKuB,KAAKC,SACnBZ,EAAU,UACb,IAAEa,MAAMb,EAAU,UAEnB,GAAE,CAACI,IAGJ,IAAMU,EAAY,mCAAG,WAAOC,GAAP,iEACjBZ,EAAgB,CAACC,OAASG,IAC1BlC,QAAQ2C,MACRD,EAAEE,iBAHe,2CAAH,sDAMlB,OAAO,UAACtB,EAAD,YAEH,UAACC,EAAD,CAAMsB,SAAUJ,EAAhB,WACI,SAACpB,EAAD,CACAyB,SA3Ba,SAAAJ,GACjBP,EAASO,EAAEK,cAAcC,MAE5B,EAyBOC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZJ,MAAOd,KAEP,SAACd,EAAD,CAAK6B,KAAK,SAAV,uBAEQ,YAAXvB,IAAyB,SAACf,EAAD,CAAUC,MAAOA,EAAOC,SAAUA,IAChD,YAAXa,IAAwB,SAAC2B,EAAA,EAAD,MAEhC,C","sources":["Api.js","Movies/FilmList/FilmList.styled.jsx","Movies/FilmList/FilmList.jsx","Movies/Movies.styled.jsx","Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/\"\n\nexport const getFilms = async( text,page )=>{\n    try {\n      const response = await axios.get(`3/search/movie?api_key=d2b1f43b135f5d6f20df0dc93193eaa3&language=en-US&query=${text}&page=${page}&include_adult=false`)\n      return response\n    } catch (error) {\n      console.error(error)\n    }\n}\n\nexport const getTrending = async()=>{\n    try {\n      const response = await axios.get(`3/trending/all/day?api_key=d2b1f43b135f5d6f20df0dc93193eaa3`)\n      return response\n    } catch (error) {\n      console.error(error)\n    }\n}\n\nexport const getDetails = async(id) =>{\n  try {\n    const response = await axios.get(`3/movie/${id}?api_key=d2b1f43b135f5d6f20df0dc93193eaa3&language=en-US`)\n    return response\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const getCast = async(id) =>{\n  try {\n    const response = await axios.get(`3/movie/${id}/credits?api_key=d2b1f43b135f5d6f20df0dc93193eaa3&language=en-US`)\n    return response\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const getReview = async(id) =>{\n  try {\n    const response = await axios.get(`3/movie/${id}/reviews?api_key=d2b1f43b135f5d6f20df0dc93193eaa3&language=en-US&page=1`)\n    return response\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul``;\n\nexport const Item = styled(Link)`\n    display:block;\n    margin-top:5px`;","import { Item, List } from \"./FilmList.styled\"\n\n\nexport const FilmList = ({films, location}) =>{\n        return (<List>\n        {films.map(film => {\n           return (<Item state={{from : location}} key={film.id} to ={`${film.id}`}>{film.original_title}</Item>)\n        })}\n    </List>)\n}","import styled from '@emotion/styled';\n\nexport const Btn = styled.button``;\n\nexport const Input = styled.input``;\n\nexport const Container = styled.div`\n    margin:20px\n`\nexport const Form = styled.form``","import { getFilms } from \"Api\";\nimport { useEffect, useState } from \"react\";\nimport {FilmList} from \"./FilmList/FilmList\";\nimport {Loader} from \"../components/Loader/Loader\";\n\nimport { Container, Input,Btn,Form} from \"./Movies.styled\"\nimport { useLocation, useSearchParams } from \"react-router-dom\";\n\nconst Movies = () =>{\n    const [films, setFilms] = useState([]);\n    const [status, setStatus] = useState(\"idle\");\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get('search') ?? '';\n    const location = useLocation()\n    const [query, setQuery] = useState('');\n    \n    const handleChange = e =>{\n        setQuery(e.currentTarget.value)  \n       \n    }\n    useEffect(() => {\n     if (!search) {\n         return\n     }\n     setStatus('loading')\n     getFilms(search,1).then(film => {\n         setFilms(film.data.results)\n         setStatus('success')\n     }).catch(setStatus('error'))\n     \n    }, [search]);\n    \n    \n    const handleSubmit = async (e) => {\n        setSearchParams({search : query})\n        console.log();\n        e.preventDefault();\n    }\n    \n    return <Container>\n        \n        <Form onSubmit={handleSubmit}>\n            <Input\n            onChange={handleChange}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films \"\n            value={query} \n            />\n            <Btn type=\"submit\">Search</Btn>\n        </Form>\n        {status === 'success' &&  <FilmList films={films} location={location}/>}\n        {status === 'loading' && <Loader/>}\n    </Container>\n}\n\nexport default Movies\n\n// useEffect(() => {\n//     setStatus('loading')\n//     getReview(id.movieId).then(c => {\n//         setReviews(c.data.results)\n//         setStatus('success')}).catch(setStatus('error'))\n// }, [id]);\n"],"names":["axios","getFilms","text","page","response","console","error","getTrending","getDetails","id","getCast","getReview","List","styled","Item","Link","FilmList","films","location","map","film","state","from","to","original_title","Btn","Input","Container","Form","useState","setFilms","status","setStatus","useSearchParams","searchParams","setSearchParams","search","get","useLocation","query","setQuery","useEffect","then","data","results","catch","handleSubmit","e","log","preventDefault","onSubmit","onChange","currentTarget","value","type","autoComplete","autoFocus","placeholder","Loader"],"sourceRoot":""}