{"version":3,"file":"static/js/854.10e2a768.chunk.js","mappings":"mRAGaA,EAAOC,EAAAA,EAAAA,GAAH,sBAEJC,GAAOD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,8D,SCFJG,EAAW,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,SACzB,OAAQ,SAACN,EAAD,UACPK,EAAME,KAAI,SAAAC,GACR,OAAQ,SAACN,EAAD,CAAMO,MAAO,CAACC,KAAOJ,GAAyBK,GAAE,UAAMH,EAAKI,IAA3D,SAAkEJ,EAAKK,gBAAlCL,EAAKI,GACpD,KAER,E,QCPYE,EAAMb,EAAAA,EAAAA,OAAH,sBAEHc,EAAQd,EAAAA,EAAAA,MAAH,sBAELe,EAAYf,EAAAA,EAAAA,IAAH,yCAGTgB,EAAOhB,EAAAA,EAAAA,KAAH,sB,SCuCjB,EAxCe,WAAM,IAAD,EAChB,GAA0BiB,EAAAA,EAAAA,UAAS,IAAnC,eAAOb,EAAP,KAAcc,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GACvCpB,GAAWqB,EAAAA,EAAAA,MAIXC,EAAY,mCAAG,WAAOC,GAAP,8EACjBA,EAAEC,iBADe,SAGbT,EAAU,WAHG,UAISU,EAAAA,EAAAA,IAASN,EAAO,GAJzB,OAIPO,EAJO,OAKbb,EAASa,EAAQC,KAAKC,SALT,gDAObb,EAAU,SAPG,yBASfA,EAAU,WATK,4EAAH,sDAalB,OAAO,UAACL,EAAD,YAEH,UAACC,EAAD,CAAMkB,SAAUP,EAAhB,WACI,SAACb,EAAD,CACAqB,SApBa,SAAAP,GACjBL,EAAgB,CAACC,OAASI,EAAEQ,cAAcC,OAC7C,EAmBOC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZJ,MAAOb,KAEP,SAACX,EAAD,CAAKyB,KAAK,SAAV,uBAEQ,YAAXnB,IAAyB,SAAChB,EAAD,CAAUC,MAAOA,EAAOC,SAAUA,IAChD,YAAXc,IAAwB,SAACuB,EAAA,EAAD,MAEhC,C","sources":["Movies/FilmList/FilmList.styled.jsx","Movies/FilmList/FilmList.jsx","Movies/Movies.styled.jsx","Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul``;\n\nexport const Item = styled(Link)`\n    display:block;\n    margin-top:5px`;","import { Item, List } from \"./FilmList.styled\"\n\n\nexport const FilmList = ({films, location}) =>{\n        return (<List>\n        {films.map(film => {\n           return (<Item state={{from : location}} key={film.id} to ={`${film.id}`}>{film.original_title}</Item>)\n        })}\n    </List>)\n}","import styled from '@emotion/styled';\n\nexport const Btn = styled.button``;\n\nexport const Input = styled.input``;\n\nexport const Container = styled.div`\n    margin:20px\n`\nexport const Form = styled.form``","import { getFilms } from \"Api\";\nimport { useState } from \"react\";\nimport {FilmList} from \"./FilmList/FilmList\";\nimport {Loader} from \"../components/Loader/Loader\";\n\nimport { Container, Input,Btn,Form} from \"./Movies.styled\"\nimport { useLocation, useSearchParams } from \"react-router-dom\";\n\nconst Movies = () =>{\n    const [films, setFilms] = useState([]);\n    const [status, setStatus] = useState(\"idle\");\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get('search') ?? '';\n    const location = useLocation()\n    const handleChange = e =>{  \n        setSearchParams({search : e.currentTarget.value})\n    }\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            setStatus('loading')\n            const content = await getFilms(search,1);\n            setFilms(content.data.results);\n          } catch (error) {\n            setStatus('error')\n          } finally {\n          setStatus('success')\n          }\n    }\n    \n    return <Container>\n        \n        <Form onSubmit={handleSubmit}>\n            <Input\n            onChange={handleChange}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films \"\n            value={search} \n            />\n            <Btn type=\"submit\">Search</Btn>\n        </Form>\n        {status === 'success' &&  <FilmList films={films} location={location}/>}\n        {status === 'loading' && <Loader/>}\n    </Container>\n}\n\nexport default Movies"],"names":["List","styled","Item","Link","FilmList","films","location","map","film","state","from","to","id","original_title","Btn","Input","Container","Form","useState","setFilms","status","setStatus","useSearchParams","searchParams","setSearchParams","search","get","useLocation","handleSubmit","e","preventDefault","getFilms","content","data","results","onSubmit","onChange","currentTarget","value","type","autoComplete","autoFocus","placeholder","Loader"],"sourceRoot":""}